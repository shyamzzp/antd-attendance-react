{"version":3,"sources":["logo.svg","Attendance/AttendanceController.js","NotFound/NotFound.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Content","Footer","Sider","SubMenu","Menu","Attendance","state","collapsed","onCollapse","console","log","setState","onContent","prop","createTable","table","data","students","length","i","Math","floor","push","gutter","className","span","content","rollno","title","name","checkedChildren","unCheckedChildren","defaultChecked","style","minHeight","collapsible","this","height","background","margin","theme","defaultSelectedKeys","mode","key","UserOutlined","Item","padding","value","valueStyle","color","prefix","PlusSquareOutlined","CheckCircleOutlined","CloseCircleOutlined","orientation","fontWeight","textAlign","React","Component","NotFound","status","subTitle","extra","type","path","component","AttendanceController","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.123cb8ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Layout, Menu, Breadcrumb, Row, Col, Divider, Switch, Card, Statistic, Popover } from 'antd';\r\nimport './Attendance.css';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { CloseCircleOutlined, CheckCircleOutlined, UserOutlined, PlusSquareOutlined } from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst content = (\r\n  <div>\r\n    <p>Content</p>\r\n    <p>Content</p>\r\n  </div>\r\n);\r\nclass Attendance extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n  onContent = prop => {\r\n    return <div>\r\n      <p>{prop}</p>\r\n    </div>\r\n  };\r\n\r\n  createTable = (prop) => {\r\n    console.log(prop % 3);\r\n\r\n    let table = [];\r\n    let data = {\r\n      \"students\": [\r\n        { \"name\": \"Shyam\", \"rollno\": 1, \"attendance\": \"present\" },\r\n        { \"name\": \"Inder\", \"rollno\": 2, \"attendance\": \"present\" },\r\n        { \"name\": \"Param\", \"rollno\": 3, \"attendance\": \"present\" },\r\n        { \"name\": \"Karam\", \"rollno\": 4, \"attendance\": \"present\" },\r\n        { \"name\": \"Charam\", \"rollno\": 5, \"attendance\": \"present\" },\r\n        { \"name\": \"Nitya\", \"rollno\": 6, \"attendance\": \"present\" },\r\n        { \"name\": \"Aditya\", \"rollno\": 7, \"attendance\": \"present\" },\r\n        { \"name\": \"Ravi\", \"rollno\": 8, \"attendance\": \"present\" },\r\n        { \"name\": \"Kushal\", \"rollno\": 9, \"attendance\": \"present\" },\r\n        { \"name\": \"Manoj\", \"rollno\": 10, \"attendance\": \"present\" },\r\n        { \"name\": \"Adityas\", \"rollno\": 11, \"attendance\": \"present\" }\r\n      ]\r\n    };\r\n    prop = data.students.length;\r\n    for (let i = 0; i < Math.floor(prop / 3); i++) {\r\n\r\n      //Create the parent and add the children\r\n      table.push(<>\r\n        <Row gutter={16}>\r\n          <Col className=\"gutter-row\" span={8}>\r\n            <Popover content={this.onContent(\"Roll Number: \" + data.students[3 * i].rollno)} title={data.students[3 * i].name}>\r\n              <Switch checkedChildren={data.students[3 * i].name} unCheckedChildren={data.students[3 * i].name} defaultChecked />\r\n            </Popover>\r\n\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={8}>\r\n            <Popover content={this.onContent(\"Roll Number: \" + data.students[3 * i + 1].rollno)} title={data.students[3 * i + 1].name}>\r\n              <Switch checkedChildren={data.students[3 * i + 1].name} unCheckedChildren={data.students[3 * i + 1].name} defaultChecked />\r\n            </Popover>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={8}>\r\n            <Popover content={this.onContent(\"Roll Number: \" + data.students[3 * i + 2].rollno)} title={data.students[3 * i + 2].name}>\r\n              <Switch checkedChildren={data.students[3 * i + 2].name} unCheckedChildren={data.students[3 * i + 2].name} defaultChecked />\r\n            </Popover>\r\n          </Col>\r\n        </Row>\r\n        <br /></>\r\n      );\r\n    }\r\n    if (prop % 3 === 2) {\r\n      table.push(<>\r\n        <Row gutter={16}>\r\n          <Col className=\"gutter-row\" span={8}>\r\n          <Popover content={this.onContent(\"Roll Number: \" + data.students[Math.floor(prop / 3) * 3].rollno)} title={data.students[Math.floor(prop / 3) * 3].name}>\r\n            <Switch checkedChildren={data.students[Math.floor(prop / 3) * 3].name} unCheckedChildren={data.students[Math.floor(prop / 3) * 3].name} defaultChecked />\r\n            </Popover>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={8}>\r\n          <Popover content={this.onContent(\"Roll Number: \" + data.students[Math.floor(prop / 3) * 3 + 1].rollno)} title={data.students[Math.floor(prop / 3) * 3 + 1].name}>\r\n            <Switch checkedChildren={data.students[Math.floor(prop / 3) * 3 + 1].name} unCheckedChildren={data.students[Math.floor(prop / 3) * 3 + 1].name} defaultChecked />\r\n            </Popover>\r\n          </Col>\r\n        </Row>\r\n        <br /></>\r\n      );\r\n    }\r\n    if (prop % 3 === 1) {\r\n      table.push(<>\r\n        <Row gutter={16}>\r\n          <Col className=\"gutter-row\" span={8}>\r\n          <Popover content={this.onContent(\"Roll Number: \" + data.students[Math.floor(prop / 3) * 3].rollno)} title={data.students[Math.floor(prop / 3) * 3].name}>\r\n            <Switch checkedChildren={data.students[Math.floor(prop / 3) * 3].name} unCheckedChildren={data.students[Math.floor(prop / 3) * 3].name} defaultChecked />\r\n            </Popover>\r\n          </Col>\r\n        </Row>\r\n        <br /></>\r\n      );\r\n    }\r\n\r\n    return table\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n          <div style={{ height: '32px', background: 'yellow', margin: '16px' }} />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span>\r\n                  <UserOutlined />\r\n                  <span>Attendance</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"3\">11th April 2020</Menu.Item>\r\n              <Menu.Item key=\"4\">12th April 2020</Menu.Item>\r\n              <Menu.Item key=\"5\">13th April 2020</Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n          <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>User</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: '100%' }}>\r\n\r\n              <Row gutter={16}>\r\n                <Col span={8}>\r\n                  <Card>\r\n                    <Statistic\r\n                      title=\"Total\"\r\n                      value={59}\r\n                      valueStyle={{ color: '#FFC107' }}\r\n                      prefix={<PlusSquareOutlined />}\r\n\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Card>\r\n                    <Statistic\r\n                      title=\"Present\"\r\n                      value={50}\r\n                      valueStyle={{ color: '#3f8600' }}\r\n                      prefix={<CheckCircleOutlined />}\r\n\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Card>\r\n                    <Statistic\r\n                      title=\"Absent\"\r\n                      value={9}\r\n                      valueStyle={{ color: '#cf1322' }}\r\n                      prefix={<CloseCircleOutlined />}\r\n\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n              </Row><Divider orientation=\"center\" style={{ color: '#333', fontWeight: 'normal' }}>Attendance</Divider>\r\n              {this.createTable(28)}\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Attendance Management System ©2020 Created by shyamzzp</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default Attendance;","import { Result, Button } from 'antd';\r\nimport React from 'react';\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (<Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Button type=\"primary\">Back Home</Button>}\r\n        />);\r\n    }\r\n};\r\nexport default NotFound;","import React from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport AttendanceController from './Attendance/AttendanceController';\r\nimport NotFound from './NotFound/NotFound';\r\n\r\nexport default () => \r\n<BrowserRouter>\r\n<Switch>\r\n    <Route path='/src'  component={AttendanceController} />  \r\n    <Route path='/notfound'  component={NotFound} />  \r\n    </Switch>\r\n    </BrowserRouter>\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Routes from './routes'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Attendance from './Attendance/AttendanceController';\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}